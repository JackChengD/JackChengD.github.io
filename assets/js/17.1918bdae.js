(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{376:function(n,t,a){"use strict";a.r(t);var s=a(45),e=Object(s.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[n._v("#")]),n._v(" 背景")]),n._v(" "),a("p",[n._v("前两天买了个阿里云的服务器，所以尝试了一手，如何安装使用nginx，在这分享给大家")]),n._v(" "),a("h2",{attrs:{id:"nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[n._v("#")]),n._v(" nginx")]),n._v(" "),a("h3",{attrs:{id:"安装nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装nginx"}},[n._v("#")]),n._v(" 安装nginx")]),n._v(" "),a("ol",[a("li",[n._v("安装gcc gcc-c++(如新环境,未安装请先安装)")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("    $ yum install -y gcc gcc-c++\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[n._v("安装nginx")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("    1. $ cd /usr/local/\n    2. $ wget http://nginx.org/download/nginx-1.8.0.tar.gz\n    3. $ tar -zxvf nginx-1.8.0.tar.gz\n    4. $ cd nginx-1.8.0\n    5. $ ./configure --user=nobody --group=nobody --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_gzip_static_module --with-http_realip_module --with-http_sub_module --with-http_ssl_module\n    6. $ make && make install\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[n._v("启动命令")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("    启动：$ /usr/local/nginx/sbin/nginx\n    重新加载：$ /usr/local/nginx/sbin/nginx –s reload\n    停止：$ /usr/local/nginx/sbin/nginx –s stop\n    测试配置文件是否正常：$ /usr/local/nginx/sbin/nginx –t\n    强制关闭：$ pkill nginx\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[n._v("是否成功")])]),n._v(" "),a("blockquote",[a("p",[n._v("通过个人服务器ip查看，默认端口80")])]),n._v(" "),a("h3",{attrs:{id:"修改nginx启动命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改nginx启动命令"}},[n._v("#")]),n._v(" 修改nginx启动命令")]),n._v(" "),a("ol",[a("li",[n._v("修改以下配置")])]),n._v(" "),a("blockquote",[a("p",[n._v("在 **/etc/init.d/**下创建名为nginx的启动脚本即可，内容如下：")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('#!/bin/bash\n#\n# chkconfig: - 85 15\n# description: Nginx is a World Wide Web server.\n# processname: nginx\n\nnginx=/usr/local/nginx/sbin/nginx\nconf=/usr/local/nginx/conf/nginx.conf\ncase $1 in\nstart)\necho -n "Starting Nginx"\n$nginx -c $conf\necho " done"\n;;\nstop)\necho -n "Stopping Nginx"\nkillall -9 nginx\necho " done"\n;;\ntest)\n$nginx -t -c $conf\n;;\nreload)\necho -n "Reloading Nginx"\nps auxww | grep nginx | grep master | awk \'{print $2}\' | xargs kill -HUP\necho " done"\n;;\nrestart)\n$0 stop\n$0 start\n;;\nshow)\nps -aux|grep nginx\n;;\n*)\necho -n "Usage: $0 {start|restart|reload|stop|test|show}"\n;;\nesac\n')])])]),a("blockquote",[a("p",[n._v("设置执行权限：chmod +x /etc/init.d/nginx"),a("br"),n._v("\n注册成服务：chkconfig -add nginx"),a("br"),n._v("\n设置开机启动：chkconfig nginx on")])]),n._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[n._v("修改后")])]),n._v(" "),a("blockquote",[a("p",[n._v("之后，就可以使用以下命令了"),a("br"),n._v("\n启动：service nginx start"),a("br"),n._v("\n停止：service nginx stop"),a("br"),n._v("\n重新加载：service nginx resload"),a("br"),n._v("\nservice nginx reload")])]),n._v(" "),a("h2",{attrs:{id:"nginx部署vue项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx部署vue项目"}},[n._v("#")]),n._v(" nginx部署vue项目")]),n._v(" "),a("ol",[a("li",[n._v("vue打包")])]),n._v(" "),a("blockquote",[a("p",[n._v("个人通过npm run build生成dist文件")])]),n._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[n._v("将文件传到centOS系统，远程服务器可以通过Xshell、Xftp")])]),n._v(" "),a("li",[a("p",[n._v("开始部署")])])]),n._v(" "),a("blockquote",[a("p",[n._v("进入 /usr/local/nginx/conf"),a("br"),n._v("\n开启vi编辑器 vi nginx.conf"),a("br"),n._v("\n添加以下内容")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("     server { \n         listen  Vue项目的端口号;\n         server_name  localhost;\n         #charset koi8-r;\n         #access_log  logs/host.access.log  main;\n         location / {\n          root vue的dist文件夹的路径，比如：/root/guobao/dist;\n          index index.html index.html;\n        }\n     }\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[n._v("补充，开启多端口")])]),n._v(" "),a("blockquote",[a("p",[n._v("除了添加server，配端口以外，还需要，比如：个人阿里云上开启端口，否则也是访问不了新添加的server")])]),n._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[n._v("重新加载")])]),n._v(" "),a("blockquote",[a("p",[n._v("每次修改nginx.conf文件后，都要重新加载")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("   $ service nginx reload\n")])])]),a("h2",{attrs:{id:"nginx部署nuxt项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx部署nuxt项目"}},[n._v("#")]),n._v(" nginx部署nuxt项目")]),n._v(" "),a("h3",{attrs:{id:"安装node环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装node环境"}},[n._v("#")]),n._v(" 安装node环境")]),n._v(" "),a("ol",[a("li",[n._v("安装wget")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("    $ yum install wget -y\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[n._v("安装node")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("    1. 下载： $ wget https://nodejs.org/dist/v10.13.0/node-v10.13.0-linux-x64.tar.xz\n    2. 解压： $ xz -d node-v10.13.0-linux-x64.tar.xz\n    3 .解压： $ tar xvf node-v10.13.0-linux-x64.tar\n    4. 安装nodejs\n       1. cd node-v10.13.0-linux-x64\n　　　　2. cd bin\n　　　　3. mv ./node /bin/\n　　　　4. mv ./npm /bin/\n　　　　5. mv ./npx /bin/\n　　　　6. cd .. cd lib\n　　　　7. mv ./node_modules /lib/\n    5. 安装nrm：$ npm install nrm -g\n    6. 安装pm2：$ npm install pm2 -g\n    7. 查看版本：$ node --version\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[n._v("开始部署")])]),n._v(" "),a("blockquote",[a("ol",[a("li",[n._v("拷贝文件"),a("br"),n._v("\n拷贝文件（.nuxt、static、nuxt.config.js、package.json）至服务器部署目录（比如：/root/nuxt）")]),n._v(" "),a("li",[n._v("测试\ncd /root/nuxt"),a("br"),n._v("\nnpm install -production"),a("br"),n._v("\nnpm run start"),a("br"),n._v("\n发现可以运行")]),n._v(" "),a("li",[n._v("nginx配置\n进入 /usr/local/nginx/conf"),a("br"),n._v("\n开启vi编辑器 vi nginx.conf"),a("br"),n._v("\n添加以下内容")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code")])])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v(" server { \n     listen  Nuxt项目的端口号;\n     server_name  localhost;\n     #charset koi8-r;\n     #access_log  logs/host.access.log  main;\n     location / {\n      root vue的dist文件夹的路径，比如：/root/nuxt;\n      # 需要做反向代理\n      proxy_pass http://127.0.0.1:3000; \n    }\n }\n")])])]),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("4.重新加载   \n每次修改nginx.conf文件后，都要重新加载   \n")])])])]),n._v(" "),a("p",[n._v("$ service nginx reload")]),n._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);